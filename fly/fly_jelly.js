// fly_jelly.js - –í–∞—Ä–µ–Ω—å–µ –¥–ª—è –º—É—Ö–∏ (–∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö) —Å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
const fs = require('fs');
const path = require('path');

/**
 * –ö–ª–∞—Å—Å "–í–∞—Ä–µ–Ω—å–µ" - –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º—É—Ö–∏
 */
class Jelly {
    /**
     * –°–æ–∑–¥–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä "–í–∞—Ä–µ–Ω—å–µ"
     * @param {string} tablePath - –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å ASCII-—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
     */
    constructor(tablePath) {
        this.tablePath = tablePath;
        this.ensureTableExists();
    }

    /**
     * –£–±–µ–∂–¥–∞–µ—Ç—Å—è, —á—Ç–æ —Ñ–∞–π–ª table.txt —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
     */
    ensureTableExists() {
        if (!fs.existsSync(this.tablePath)) {
            const sampleTree = `# –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
# –ü—Ä–∏–º–µ—Ä:
project/
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ components/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Button.js
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ Header.js
‚îÇ   ‚îî‚îÄ‚îÄ index.js
‚îî‚îÄ‚îÄ package.json
`;
            fs.writeFileSync(this.tablePath, sampleTree);
            console.log(`üçØ –°–æ–∑–¥–∞–Ω–æ –≤–∞—Ä–µ–Ω—å–µ (—Ñ–∞–π–ª): ${this.tablePath}`);
        }
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ —Å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
     * @returns {string} - –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
     */
    getData() {
        try {
            // –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            const rawData = fs.readFileSync(this.tablePath, 'utf8');

            // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ - –æ—á–∏—Å—Ç–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            console.log('üçØ –í–∞—Ä–µ–Ω—å–µ –ø—Ä–æ–≤–æ–¥–∏—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...');
            const cleanedData = this.cleanComments(rawData);

            return cleanedData;
        } catch (error) {
            throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞: ${error.message}`);
        }
    }

    /**
     * –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –º–µ—Ç–æ–¥–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
     * @param {string} asciiTree - ASCII-—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
     * @returns {string} - ASCII-—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
     */
    cleanComments(asciiTree) {
        // –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –µ—Å—Ç—å, –æ—Å–Ω–æ–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤ Brain
        return asciiTree;
    }
}

module.exports = Jelly;