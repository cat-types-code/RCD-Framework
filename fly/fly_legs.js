// fly_legs.js - –õ–∞–ø–∫–∏ –º—É—Ö–∏ (–≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏)
const fs = require('fs');
const path = require('path');

/**
 * –°–æ–∑–¥–∞–µ—Ç README.md –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
 * @param {string} dirPath - –ü—É—Ç—å –∫ –∫–∞—Ç–∞–ª–æ–≥—É –ø—Ä–æ–µ–∫—Ç–∞
 */
function createReadmeOnTheFly(dirPath) {
    console.log(`ü¶µ –õ–∞–ø–∫–∞ #1: –°–æ–∑–¥–∞–µ—Ç README.md –Ω–∞ –ª–µ—Ç—É –≤ ${dirPath}...`);

    // –ò–º—è –ø—Ä–æ–µ–∫—Ç–∞ - –∏–º—è –∫–∞—Ç–∞–ª–æ–≥–∞
    const projectName = path.basename(dirPath);

    // –°–æ–¥–µ—Ä–∂–∏–º–æ–µ README.md
    const content = `# ${projectName}

## –û –ø—Ä–æ–µ–∫—Ç–µ

–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å –ø–æ–º–æ—â—å—é ü™∞ –ú—É—Ö–∏ RCD Garden.

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

\`\`\`
${projectName}/
${generateProjectTree(dirPath, dirPath, 1)}
\`\`\`

–°–æ–∑–¥–∞–Ω–æ: ${new Date().toLocaleDateString()}
`;

    // –ü—É—Ç—å –∫ README.md
    const readmePath = path.join(dirPath, 'README.md');

    // –ï—Å–ª–∏ README.md –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    if (!fs.existsSync(readmePath)) {
        try {
            fs.writeFileSync(readmePath, content);
            console.log(`  üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: ${readmePath}`);
        } catch (error) {
            console.error(`  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ README.md: ${error.message}`);
        }
    } else {
        console.log(`  ‚è© README.md —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞—é`);
    }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ä–µ–≤–æ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è README.md
 * @param {string} basePath - –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å –ø—Ä–æ–µ–∫—Ç–∞
 * @param {string} dirPath - –¢–µ–∫—É—â–∏–π –∫–∞—Ç–∞–ª–æ–≥
 * @param {number} level - –£—Ä–æ–≤–µ–Ω—å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏
 * @returns {string} - –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ä–µ–≤–∞
 */
function generateProjectTree(basePath, dirPath, level) {
    let result = '';
    const indent = '‚îÇ   '.repeat(level);

    try {
        const items = fs.readdirSync(dirPath);

        // –°–æ—Ä—Ç–∏—Ä—É–µ–º: —Å–Ω–∞—á–∞–ª–∞ –∫–∞—Ç–∞–ª–æ–≥–∏, –ø–æ—Ç–æ–º —Ñ–∞–π–ª—ã
        const sortedItems = items.sort((a, b) => {
            const aIsDir = fs.statSync(path.join(dirPath, a)).isDirectory();
            const bIsDir = fs.statSync(path.join(dirPath, b)).isDirectory();

            if (aIsDir && !bIsDir) return -1;
            if (!aIsDir && bIsDir) return 1;
            return a.localeCompare(b);
        });

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç
        for (let i = 0; i < sortedItems.length; i++) {
            const item = sortedItems[i];

            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º README.md –∏ —Å–∫—Ä—ã—Ç—ã–µ —Ñ–∞–π–ª—ã
            if (item === 'README.md' || item.startsWith('.')) continue;

            const itemPath = path.join(dirPath, item);
            const isDirectory = fs.statSync(itemPath).isDirectory();
            const isLast = i === sortedItems.length - 1;
            const prefix = isLast ? '‚îî‚îÄ‚îÄ ' : '‚îú‚îÄ‚îÄ ';

            result += `${indent}${prefix}${item}${isDirectory ? '/' : ''}\n`;

            // –ï—Å–ª–∏ —ç—Ç–æ –∫–∞—Ç–∞–ª–æ–≥, —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            if (isDirectory) {
                result += generateProjectTree(basePath, itemPath, level + 1);
            }
        }
    } catch (error) {
        console.error(`  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ—Ä–µ–≤–∞: ${error.message}`);
    }

    return result;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç .gitignore –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
 * @param {string} dirPath - –ü—É—Ç—å –∫ –∫–∞—Ç–∞–ª–æ–≥—É –ø—Ä–æ–µ–∫—Ç–∞
 */
function createGitignore(dirPath) {
    console.log(`ü¶µ –õ–∞–ø–∫–∞ #2: –°–æ–∑–¥–∞–µ—Ç .gitignore –≤ ${dirPath}...`);

    // –ü—É—Ç—å –∫ .gitignore
    const gitignorePath = path.join(dirPath, '.gitignore');

    // –ï—Å–ª–∏ .gitignore –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    if (!fs.existsSync(gitignorePath)) {
        // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .gitignore
        const content = `# –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
node_modules/
package-lock.json
yarn.lock

# –§–∞–π–ª—ã —Å—Ä–µ–¥—ã
.env
.env.local
.env.development
.env.test
.env.production

# –ñ—É—Ä–Ω–∞–ª—ã
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
.DS_Store
Thumbs.db
.cache/
.project
.idea/
.vscode/
*.swp
*.swo

# –°–±–æ—Ä–∫–∞
dist/
build/
out/
`;

        try {
            fs.writeFileSync(gitignorePath, content);
            console.log(`  üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: ${gitignorePath}`);
        } catch (error) {
            console.error(`  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ .gitignore: ${error.message}`);
        }
    } else {
        console.log(`  ‚è© .gitignore —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞—é`);
    }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ñ–∞–π–ª–æ–≤ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º
 * @param {string} dirPath - –ü—É—Ç—å –∫ –∫–∞—Ç–∞–ª–æ–≥—É –ø—Ä–æ–µ–∫—Ç–∞
 */
function createFileStubs(dirPath) {
    console.log(`ü¶µ –õ–∞–ø–∫–∞ #3: –°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ñ–∞–π–ª–æ–≤ –≤ ${dirPath}...`);

    // –®–∞–±–ª–æ–Ω—ã —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤
    const templates = {
        // JavaScript —Ñ–∞–π–ª—ã
        '.js': '// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å\n',

        // HTML —Ñ–∞–π–ª—ã
        '.html': '<!DOCTYPE html>\n<html>\n<head>\n  <meta charset="UTF-8">\n  <title>Document</title>\n</head>\n<body>\n  <h1>Hello, World!</h1>\n</body>\n</html>\n',

        // CSS —Ñ–∞–π–ª—ã
        '.css': '/* –°—Ç–∏–ª–∏ */\n',

        // Markdown —Ñ–∞–π–ª—ã (–∫—Ä–æ–º–µ README.md)
        '.md': '# –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\n\n–ü–∏—à–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–¥–µ—Å—å.\n',

        // JSON —Ñ–∞–π–ª—ã
        '.json': '{\n  "name": "project",\n  "version": "1.0.0"\n}\n',

        // TypeScript —Ñ–∞–π–ª—ã
        '.ts': '// TypeScript file\n',

        // React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        '.jsx': 'import React from "react";\n\nfunction Component() {\n  return <div>Hello World</div>;\n}\n\nexport default Component;\n',
        '.tsx': 'import React from "react";\n\nfunction Component(): JSX.Element {\n  return <div>Hello World</div>;\n}\n\nexport default Component;\n'
    };

    // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏–º —Ñ–∞–π–ª–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    function processDirectory(currentPath) {
        try {
            const items = fs.readdirSync(currentPath);

            for (const item of items) {
                const itemPath = path.join(currentPath, item);
                const stats = fs.statSync(itemPath);

                if (stats.isDirectory()) {
                    processDirectory(itemPath);
                } else if (stats.size === 0) { // –¢–æ–ª—å–∫–æ –¥–ª—è –ø—É—Å—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤
                    const ext = path.extname(item);

                    if (templates[ext] && item !== 'README.md') {
                        fs.writeFileSync(itemPath, templates[ext]);
                        console.log(`  ‚úèÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ: ${itemPath}`);
                    }
                }
            }
        } catch (error) {
            console.error(`  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–∞—Ç–∞–ª–æ–≥–∞: ${error.message}`);
        }
    }

    processDirectory(dirPath);
}

module.exports = {
    leg1: createReadmeOnTheFly,   // –°–æ–∑–¥–∞–µ—Ç README.md —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    leg2: createGitignore,        // –°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–π .gitignore
    leg3: createFileStubs         // –°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –ø—É—Å—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤
};